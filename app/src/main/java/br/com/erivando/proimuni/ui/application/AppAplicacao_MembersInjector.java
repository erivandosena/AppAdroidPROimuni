// Generated by Dagger (https://google.github.io/dagger).
package br.com.erivando.proimuni.ui.application;

import javax.inject.Provider;

import br.com.erivando.proimuni.database.IDataManager;
import dagger.MembersInjector;
import uk.co.chrisjenx.calligraphy.CalligraphyConfig;

public final class AppAplicacao_MembersInjector implements MembersInjector<AppAplicacao> {
  private final Provider<IDataManager> iDataManagerProvider;

  private final Provider<CalligraphyConfig> calligraphyConfigProvider;

  public AppAplicacao_MembersInjector(
      Provider<IDataManager> iDataManagerProvider,
      Provider<CalligraphyConfig> calligraphyConfigProvider) {
    this.iDataManagerProvider = iDataManagerProvider;
    this.calligraphyConfigProvider = calligraphyConfigProvider;
  }

  public static MembersInjector<AppAplicacao> create(
      Provider<IDataManager> iDataManagerProvider,
      Provider<CalligraphyConfig> calligraphyConfigProvider) {
    return new AppAplicacao_MembersInjector(iDataManagerProvider, calligraphyConfigProvider);
  }

  @Override
  public void injectMembers(AppAplicacao instance) {
    injectIDataManager(instance, iDataManagerProvider.get());
    injectCalligraphyConfig(instance, calligraphyConfigProvider.get());
  }

  public static void injectIDataManager(AppAplicacao instance, IDataManager iDataManager) {
    instance.iDataManager = iDataManager;
  }

  public static void injectCalligraphyConfig(
      AppAplicacao instance, CalligraphyConfig calligraphyConfig) {
    instance.calligraphyConfig = calligraphyConfig;
  }
}
